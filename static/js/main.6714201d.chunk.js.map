{"version":3,"sources":["components/form.js","components/todo.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setinputText","todos","settodos","inputtext","setinputtext","className","value","onChange","e","console","log","target","type","onClick","preventDefault","text","compleated","id","Math","random","Todo","todo","useState","checked","setchecked","useEffect","localStorage","setItem","JSON","stringify","filter","el","Todolist","map","App","inputText","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAqCgBA,MAnCf,YAAsE,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,SAASC,EAAyB,EAAzBA,UAqBxC,OArBiE,EAAfC,aAsBhD,8BACC,uBAAMC,UAAU,eAAhB,UAEA,uBAAOC,MAAOH,EAAYI,SAvBH,SAACC,GACxBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBN,EAAaQ,EAAEG,OAAOL,QAqBgCM,KAAK,OAAOP,UAAU,eAC5E,wBAAQQ,QAnBgB,SAACL,GACvBA,EAAEM,iBACgB,KAAdX,IAIJD,EAAS,GAAD,mBACHD,GADG,CACG,CAACc,KAAMZ,EAAUa,YAAW,EAAMC,GAAoB,IAAhBC,KAAKC,aAGxDnB,EAAa,MASwBK,UAAU,cAAcO,KAAK,SAAlE,SACE,mBAAGP,UAAU,+BCURe,MArCf,YAA8C,IAA9BL,EAA6B,EAA7BA,KAAMM,EAAuB,EAAvBA,KAAMnB,EAAiB,EAAjBA,SAASD,EAAQ,EAARA,MAEjC,EAA6BqB,oBAAS,GAAtC,mBAAOC,EAAP,KAAeC,EAAf,KAiBD,OAfCC,qBAAU,WACNC,aAAaC,QAAQ,UAAUC,KAAKC,UAAUN,MAC/C,CAACA,IAcF,sBAAKlB,UAAU,OAAf,UACI,uBACE,qBAAIA,UAAS,oBAAekB,EAAU,YAAc,GAAvC,KAAb,UAA8DR,EAA9D,QAEA,wBAAQF,QAfM,WAClBX,EAASD,EAAM6B,QAAO,SAACC,GAAD,OAAQA,EAAGd,KAAOI,EAAKJ,QAcTZ,UAAU,YAA1C,SACI,mBAAGA,UAAU,mBAGjB,wBAAQQ,QAdO,WACvBW,GAAYD,GACZd,QAAQC,IAAIa,IAY+BlB,UAAU,eAA7C,SACI,mBAAGA,UAAU,mBAEjB,2BCVG2B,MArBf,YAAuC,IAAnB9B,EAAkB,EAAlBA,SAASD,EAAS,EAATA,MAEzB,OAEI,qBAAKI,UAAU,iBAAf,SACA,oBAAIA,UAAU,YAAd,SACMJ,EAAMgC,KAAI,SAAAZ,GAAI,OACX,cAAC,EAAD,CACAnB,SAAUA,EACVD,MAAOA,EACPoB,KAAMA,EAENN,KAAMM,EAAKN,KACXE,GAAII,EAAKJ,IAFJI,EAAKJ,YCkCZiB,MAxCf,WAEE,IAUA,EAAiCZ,mBAAS,IAA1C,mBAAOa,EAAP,KAAiBnC,EAAjB,KACA,EAA2BsB,mBAVdI,aAAaU,QAAQ,SAGxBR,KAAKS,MAAOX,aAAaU,QAAQ,UAElC,IAKT,mBAAOnC,EAAP,KAAeC,EAAf,KAOA,OAJDuB,qBAAU,WACPC,aAAaC,QAAQ,QAAQC,KAAKC,UAAU5B,MAC7C,CAACA,IAGA,sBAAKI,UAAU,MAAf,UACA,iCACI,8CAGJ,cAAC,EAAD,CACCD,aAAcJ,EACdG,UAAWgC,EACXlC,MAAOA,EACPC,SAAUA,EACVF,aAAcA,IAChB,cAAC,EAAD,CACAE,SAAUA,EACTD,MAAOA,QC7BIqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6714201d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n function Form({setinputText ,todos,settodos,inputtext,setinputtext}) {\r\n\r\n      const inputtexthandler = (e) => {\r\n        console.log(e.target.value)\r\n        setinputText(e.target.value)\r\n      }\r\n\r\n      const submittodohandler = (e) => {\r\n          e.preventDefault()\r\n          if (inputtext === \"\") {\r\n            return;\r\n          }\r\n           \r\n          settodos([\r\n            ...todos,{text: inputtext,compleated:false,id: Math.random() * 1000 }\r\n          ])\r\n\r\n        setinputText('')\r\n\r\n      }\r\n\r\n     return(\r\n       <div>\r\n        <form className=\"fixed-bottom\">\r\n        \r\n        <input value={inputtext}  onChange={inputtexthandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submittodohandler}  className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      \r\n      </form>\r\n      </div>\r\n     );\r\n }\r\n\r\n export default Form;","import React ,{useState,useEffect} from 'react';\r\n\r\nfunction Todo ({text ,todo ,settodos,todos}) {\r\n\r\n    const [checked,setchecked] = useState(false);\r\n     \r\n    useEffect(() => {\r\n        localStorage.setItem(\"checked\",JSON.stringify(checked))\r\n     },[checked])  \r\n      \r\n\r\n    const deletehandler = () => {\r\n        settodos(todos.filter((el) => el.id !== todo.id));\r\n           \r\n    };\r\n\r\n   const completethandler =() => {\r\n    setchecked(!checked)\r\n    console.log(checked);\r\n   };\r\n  \r\n   return(\r\n      <div className=\"todo\">\r\n          <br></br>\r\n            <li className={`todo-item ${checked ? 'completed' : ''} `}  >{text}  </li>\r\n        \r\n            <button onClick={deletehandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n\r\n            <button onClick={completethandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>   \r\n            <br></br>\r\n      </div>\r\n);\r\n\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './todo';\r\nfunction Todolist({ settodos,todos,}) {\r\n\r\n    return(\r\n    \r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n             {todos.map(todo => (\r\n                 <Todo  \r\n                 settodos={settodos} \r\n                 todos={todos} \r\n                 todo={todo} \r\n                 key={todo.id} \r\n                 text={todo.text}\r\n                 id={todo.id} />\r\n             ))}\r\n        </ul>\r\n      </div>\r\n \r\n    );\r\n}\r\n\r\nexport default Todolist;","import React, {useState , useEffect} from 'react';\nimport './App.css';\nimport Form from \"./components/form\"\nimport Todolist from './components/todolist';\n\n\n\nfunction App() {\n\n  const getlocalstorage = () => {\n   let lists = localStorage.getItem('lists')\n\n   if (lists) {\n     return JSON.parse( localStorage.getItem('lists'));\n   }else {\n     return[];\n   }\n}\n\n  const [inputText,setinputText] = useState(\"\");\n  const [todos , settodos] = useState(getlocalstorage());\n  \n   \n useEffect(() => {\n    localStorage.setItem('lists',JSON.stringify(todos))\n },[todos])  \n  \n  return (\n    <div className=\"App\">\n    <header >\n        <h1>todo list </h1>\n    </header>\n\n    <Form\n     setinputtext={setinputText} \n     inputtext={inputText} \n     todos={todos} \n     settodos={settodos}\n     setinputText={setinputText} />\n   <Todolist \n   settodos={settodos} \n    todos={todos} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}