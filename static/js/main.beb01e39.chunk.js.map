{"version":3,"sources":["components/form.js","components/todo.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setinputText","todos","settodos","inputtext","timeText","setinputext","settimeText","className","value","onChange","e","console","log","target","placeholder","type","onClick","preventDefault","text","time","id","Math","random","Todo","todo","useState","checked","setchecked","classes","JSON","parse","Date","toLocaleTimeString","hour","hour12","class","role","filter","el","Todolist","map","App","inputText","localStorage","getItem","useEffect","setItem","stringify","toLocaleDateString","setinputtext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beb01e39.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n function Form({setinputText ,todos,settodos,inputtext,setinputext,timeText,settimeText}) {\r\n\r\n      const inputtexthandler = (e) => {\r\n        console.log(e.target.value)\r\n        setinputText(e.target.value)\r\n      }\r\n      \r\n      const timetexthandler = (e) => {\r\n      settimeText(e.target.value)    \r\n  \r\n      }\r\n\r\n      const submittodohandler = (e) => {\r\n          e.preventDefault()\r\n          if (inputtext === \"\" || timeText ===\"\") {\r\n            return;\r\n          }\r\n           \r\n          settodos([\r\n            ...todos,{text: inputtext,time:timeText ,id: Math.random() * 1000 }\r\n          ])\r\n\r\n        setinputText('')\r\n        settimeText('')\r\n\r\n      }\r\n\r\n     return(\r\n       <div>\r\n        <form className=\"fixed-bottom\">\r\n        \r\n        <input value={inputtext}  onChange={inputtexthandler} placeholder=\"task\" type=\"text\" className=\"todo-input\" />\r\n        <input value={timeText} onChange={timetexthandler} placeholder=\"when should your task end\" type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submittodohandler}  className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      \r\n      </form>\r\n      </div>\r\n     );\r\n }\r\n\r\n export default Form;","import React ,{useState} from 'react';\r\n\r\nfunction Todo ({text ,todo ,settodos,todos,time }) {\r\n\r\n    const [checked,setchecked] = useState(false);\r\n     \r\n    var date = JSON.parse(new Date().toLocaleTimeString([], {hour: '2-digit', hour12: false}));;\r\n \r\n    \r\n        \r\n    \r\n\r\n    const deletehandler = () => {\r\n        settodos(todos.filter((el) => el.id !== todo.id));\r\n           \r\n    };\r\n\r\n   const completethandler =() => {\r\n    setchecked(!checked)\r\n    console.log(checked);\r\n   };\r\n\r\n    let classes = \"todo-item  badge bg-\"\r\n    classes += date <= time  ? \"success\" : \"danger\"\r\n  \r\n   return(\r\n      <div className=\"todo\">\r\n        <br></br>\r\n          <li className={`todo-item ${checked ? 'completed' : ''} `}  >\r\n            \r\n             do {text}\r\n            <span class={classes}>till {time}</span>                                                                        \r\n            <div class={`spinner-border ${checked ? 'visually-hidden' : ''}`}  role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n             \r\n         </li>\r\n        \r\n            <button onClick={deletehandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n\r\n            <button onClick={completethandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>   \r\n            <br></br>\r\n      </div>\r\n);\r\n\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './todo';\r\nfunction Todolist({ settodos,todos,}) {\r\n\r\n    return(\r\n    \r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n             {todos.map(todo => (\r\n                 <Todo  \r\n                 settodos={settodos} \r\n                 todos={todos} \r\n                 todo={todo} \r\n                 key={todo.id} \r\n                 text={todo.text}\r\n                 id={todo.id}\r\n                 time={todo.time}\r\n                  />\r\n             ))}\r\n        </ul>\r\n      </div>\r\n \r\n    );\r\n}\r\n\r\nexport default Todolist;","import React, {useState , useEffect} from 'react';\nimport './App.css';\nimport Form from \"./components/form\"\nimport Todolist from './components/todolist';\n\n\n\nfunction App() {\n\n  const getlocalstorage = () => {\n   let lists = localStorage.getItem('lists')\n\n   if (lists) {\n     return JSON.parse( localStorage.getItem('lists'));\n   }else {\n     return[];\n   }\n}\n\n  const [inputText,setinputText] = useState(\"\");\n  const [timeText,settimeText] = useState(\"\");\n  const [todos , settodos] = useState(getlocalstorage());\n  \n   \n useEffect(() => {\n    localStorage.setItem('lists',JSON.stringify(todos))\n },[todos])  \n  \n  return (\n    <div className=\"App\">\n<nav class=\"navbar navbar-dark \" >\n<h2>\n    <span class=\"badge \">  {new Date().toLocaleDateString()}</span>\n    </h2>\n        <h1>todo list </h1>\n    <h2 >\n    <span class=\"badge \">  {new Date().toLocaleTimeString(([], {hour: '2-digit', hour12: false}))}</span>\n    </h2>\n</nav>\n\n\n    \n\n    <Form\n     timeText={timeText}\n     settimeText={settimeText}\n     setinputtext={setinputText} \n     inputtext={inputText} \n     todos={todos} \n     settodos={settodos}\n     setinputText={setinputText} />\n    <Todolist \n     settodos={settodos} \n     todos={todos} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}